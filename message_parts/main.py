from bot_utils import get_language_code,get_language_in_db

messages_lang_parts = [
    {
        "lang": "ru",
        "start_message": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
        "menu": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é,",
        "calculate": "–†–∞—Å—á—ë—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏",
        "miners": "–ú–∞–π–Ω–µ—Ä—ã",
        "miner_place": "–†–∞–∑–º–µ—â–µ–Ω–∏–µ –º–∞–π–Ω–µ—Ä–æ–≤",
        "order_miner": "–ó–∞–∫–∞–∑–∞—Ç—å –º–∞–π–Ω–µ—Ä",
        "back": "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        "contact": "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º",
        "contact_accept": "–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º, —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è!",
        "goto_contact": "–ü–µ—Ä–µ–π—Ç–∏ –∫ —á–∞—Ç—É",
        "cur_set": "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É",
        "select_category": "–í–∞–ª—é—Ç–∞:{cur}\n–¶–µ–Ω–∞ –∑–∞ Kw:{electr}",
        "catalog": "–ö–∞—Ç–∞–ª–æ–≥",
        "settings": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        "cur_set_new": "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å kW —ç–Ω–µ—Ä–≥–∏–∏, –∏–ª–∏ –Ω–∞–∂–∏—Ç–µ –Ω–∞ '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'",
        "standart_var": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
        "back_to_cur": "–ù–∞–∑–∞–¥",
        "stay_electr": "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–º",
        "cur_set_renew": "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏ {electr}. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å kW —ç–Ω–µ—Ä–≥–∏–∏, –∏–ª–∏ –Ω–∞–∂–∏—Ç–µ –Ω–∞ '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'",
        "text_in_miner_miner_place": "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤–∞—à–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤ –Ω–∞—à–µ–º –¥–∞—Ç–∞-—Ü–µ–Ω—Ç—Ä–µ –≤ –≥.–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 4,32 —Ä –∑–∞ –∫–í—Ç —Å –ù–î–°.\n –î–æ—Å—Ç—É–ø–Ω–æ –∫ —Ä–∞–∑–º–µ—â–µ–Ω–∏—é: 10 –ú–í—Ç\n–û—Å—Ç–∞–≤–ª—è–π—Ç–µ –∑–∞—è–≤–∫—É –ø–æ –∫–Ω–æ–ø–∫–µ 'CONTACT'üëá",
        "calculate_datas": "üî•–î–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü: {dohod} {currency} üí∞\n"
                           " ‚ùó–†–∞—Å—Ö–æ–¥ –∑–∞ –º–µ—Å—è—Ü: {rashod} {currency}üíµ\n"
                           "üî•–ü—Ä–∏–±—ã–ª—å –≤ –º–µ—Å—è—Ü: {pribyl} {currency}\n"
                           "‚ö°–û–∫—É–ø–∞–µ–º–æ—Å—Ç—å, –º–µ—Å—è—Ü–µ–≤: {okup}\n"
                           "\n"
                           "–†–∞—Å—á–µ—Ç –Ω–∞ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è:\n"
                           "üìÜ {date} {time}\n"
                           "\n"
                           "\n"
                           "–ú–æ–¥–µ–ª—å –º–∞–π–Ω–µ—Ä–∞ - {name} {th} TH\n"
                           "–¶–µ–Ω–∞ –º–∞–π–Ω–µ—Ä–∞ - {sell} {currency}\n"
                           "–ü—Ä–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ü–µ–Ω–µ –∑–∞ –∫–í–¢/—á - {pay} {currency}üìå\n"
                           "\n"
                           "–†–∞—Å—á—ë—Ç –ø–æ –∫—É—Ä—Å—É Binance 1 BTC = {binancecur} USD\n"
                           "üí≤–ö—É—Ä—Å  1$ = {courseusd} {currency}\n"
                           "–°–ª–æ–∂–Ω–æ—Å—Ç—å —Å–µ—Ç–∏ Bitcoin: {dif}\n"
                           "–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –±–ª–æ–∫: {reward} BTC\n"
                           "\n"
                           "\n"
                           "–ó–∞–∫–∞–∑–∞—Ç—å –º–∞–π–Ω–µ—Ä—ã @diana_miningbtc\n"
                           "üåêhttp://mining4-you.com\n",
        "other_miner": "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π",
        "order_miner": "–ó–∞–∫–∞–∑–∞—Ç—å –º–∞–π–Ω–µ—Ä",
        "feedback_order": "–î–ª—è –∑–∞–∫–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç"
    },
    {
        "lang": "en",
        "start_message": "Select language",
        "menu": "Hello,",
        "calculate": "Calculation of profitability",
        "miners": "Miners",
        "miner_place": "Miner placement",
        "order_miner": "Order a miner",
        "contact": "Share contact",
        "contact_accept": "Thanks for sharing your contact, you will be contacted!",
        "back": "back to menu",
        "goto_contact": "Go to chat",
        "cur_set": "Select currency",
        "select_category": "Currency:{cur}\n kW energy cost:{electr}",
        "catalog": "catalog",
        "settings": "Settings",
        "cur_set_new": "Enter the kW energy cost, or click on 'Use standard value'",
        "standart_var": "Use standard value",
        "stay_electr": "Keep current",
        "back_to_cur": "Back",
        "cur_set_renew": "The current value of electricity is {electr}. If you want to change it, enter the kW energy cost, or click on 'Use standard value'",
        "text_in_miner_miner_place": "We offer to place your equipment in our data center in Krasnoyarsk.\nThe cost from 4,32 p per kW with VAT.\n Available for placement: 10 MW\nSubmit an application on the button 'CONTACT'üëá",
        "calculate_datas": "üî•Income per month: {dohod} {currency} üí∞\n"
                           "‚ùóMonthly expense: {rashod} {currency}üíµ\n"
                           "üî•Profit per month: {pribyl} {currency}\n"
                           "‚ö°Payback, months: {okup}\n"
                           "\n"
                           "Calculating for the date and time:\n"
                           "üìÜ {date} {time}\n"
                           "\n"
                           "\n"
                           "Miner model - {name} {th} TH\n"
                           "Miner price - {sell} {currency}\n"
                           "At the specified price per kWh -\n"
                           " {pay} {currency}üìå\n"
                           "\n"
                           "Calculated using Binance exchange rate 1 BTC = {binancecur} USD\n"
                           "üí≤Course 1$  = {courseusd} {currency}\n"
                           "Bitcoin network complexity: {dif}\n"
                           "Block reward: {reward} BTC\n"
                           "\n"
                           "\n"
                           "Order miners @diana_miningbtc\n"
                           "üåêhttp://mining4-you.com\n",
        "other_miner": "Select other",
        "order_miner": "Order a miner",
        "feedback_order": "To order, send your contact"
    },
]


def get_message(param, key, auth=False):
    match auth:
        case True:
            lang = get_language_code(get_language_in_db(param))  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–æ–≤ –≤ –∫–æ–¥—ã —è–∑—ã–∫–æ–≤
            for messages in messages_lang_parts:
                if messages["lang"] == lang:
                    return messages[key]
            return None
        case False:
            param = get_language_code(param)  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–æ–≤ –≤ –∫–æ–¥—ã —è–∑—ã–∫–æ–≤
            for messages in messages_lang_parts:
                if messages["lang"] == param:
                    return messages[key]
            return None

